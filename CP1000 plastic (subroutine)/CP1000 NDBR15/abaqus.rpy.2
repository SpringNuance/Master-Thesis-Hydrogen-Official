# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2023.HF4 replay file
# Internal Version: 2023_07_21-20.45.57 RELr425 183702
# Run by nguyenb5 on Sun Jun 30 19:40:22 2024
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=119.81770324707, 
    height=121.741897583008)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
openMdb('NDBR15_geometry_coarse.cae')
#: The model database "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 NDBR15\NDBR15_geometry_coarse.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-Full'].parts['NDBR15-m']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
mdb.Model(name='Model-Full-mesh-1-default', 
    objectToCopy=mdb.models['Model-Full'])
#: The model "Model-Full-mesh-1-default" has been created.
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
del mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].depvar
del mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].userMaterial
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].density.setValues(
    table=((7890.0, ), ))
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].Elastic(table=((
    210000000000.0, 0.3), ))
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].Plastic(
    scaleStress=None, table=((839646000.0, 0.0), (880025000.0, 0.0003), (
    906975000.0, 0.0005), (926275000.0, 0.001), (926275000.0, 0.002), (
    939393000.0, 0.003), (949756000.0, 0.004), (958495000.0, 0.005), (
    966134000.0, 0.006), (972960000.0, 0.007), (979150000.0, 0.008), (
    984823000.0, 0.009), (990061000.0, 0.01), (1027470000.0, 0.02), (
    1049750000.0, 0.03), (1064310000.0, 0.04), (1074410000.0, 0.05), (
    1081810000.0, 0.06), (1087490000.0, 0.07), (1092060000.0, 0.08), (
    1095870000.0, 0.09), (1099140000.0, 0.1), (1111180000.0, 0.15), (
    1119630000.0, 0.2), (1126250000.0, 0.25), (1131720000.0, 0.3), (
    1136380000.0, 0.35), (1140440000.0, 0.4), (1144050000.0, 0.45), (
    1147300000.0, 0.5), (1150250000.0, 0.55), (1152960000.0, 0.6), (
    1155460000.0, 0.65), (1157790000.0, 0.7), (1159960000.0, 0.75), (
    1162000000.0, 0.8), (1163920000.0, 0.85), (1165740000.0, 0.9), (
    1167460000.0, 0.95), (1169110000.0, 1.0), (1170670000.0, 1.05), (
    1172160000.0, 1.1), (1173600000.0, 1.15), (1174970000.0, 1.2), (
    1176290000.0, 1.25), (1177560000.0, 1.3), (1178790000.0, 1.35), (
    1179970000.0, 1.4), (1181120000.0, 1.45), (1182220000.0, 1.5), (
    1183300000.0, 1.55), (1184340000.0, 1.6), (1185350000.0, 1.65), (
    1186330000.0, 1.7), (1187280000.0, 1.75), (1188210000.0, 1.8), (
    1189120000.0, 1.85), (1190000000.0, 1.9), (1190860000.0, 1.95), (
    1191700000.0, 2.0), (1192520000.0, 2.05), (1193320000.0, 2.1), (
    1194100000.0, 2.15), (1194870000.0, 2.2), (1195620000.0, 2.25), (
    1196350000.0, 2.3), (1197070000.0, 2.35), (1197770000.0, 2.4), (
    1198470000.0, 2.45), (1199140000.0, 2.5), (1199810000.0, 2.55), (
    1200460000.0, 2.6), (1201100000.0, 2.65), (1201730000.0, 2.7), (
    1202350000.0, 2.75), (1202960000.0, 2.8), (1203550000.0, 2.85), (
    1204140000.0, 2.9), (1204720000.0, 2.95), (1205290000.0, 3.0)))
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].Conductivity(
    table=((1.0, ), ))
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].SpecificHeat(
    table=((1.0, ), ))
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 NDBR15\NDBR15_geometry_coarse.cae".
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF, mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
p.generateMesh()
#: 
#: Point 1: 7.5E-03, 42.763E-03, 1.E-03  Point 2: 7.5E-03, 42.763E-03, 0.
#:    Distance: 1.E-03  Components: 0., 0., -1.E-03
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.461939, 
    farPlane=0.623691, width=0.0223363, height=0.00987937, 
    viewOffsetX=0.00310155, viewOffsetY=0.00718474)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#e00 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0:2 #18000000 #2828 ]', ), )
p.seedEdgeByNumber(edges=pickedEdges, number=4, constraint=FINER)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.436866, 
    farPlane=0.648764, width=0.199189, height=0.0881014, viewOffsetX=0.0443737, 
    viewOffsetY=0.024185)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#800 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#200 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.459907, 
    farPlane=0.625723, width=0.0348573, height=0.0154174, 
    viewOffsetX=0.00753079, viewOffsetY=0.00478997)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#400 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.46024, 
    farPlane=0.62539, width=0.0328066, height=0.0145104, 
    viewOffsetX=0.00230838, viewOffsetY=-0.074242)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#41 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#20080a ]', ), )
p.seedEdgeByNumber(edges=pickedEdges, number=4, constraint=FINER)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.461531, 
    farPlane=0.624098, width=0.0248444, height=0.0109887, 
    viewOffsetX=0.00181875, viewOffsetY=-0.0251688)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#2 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#8100 ]', ), )
p.seedEdgeByNumber(edges=pickedEdges, number=4, constraint=FINER)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.434537, 
    farPlane=0.651093, width=0.215343, height=0.0952464, viewOffsetX=0.0734386, 
    viewOffsetY=-0.0552259)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#41 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.46014, 
    farPlane=0.62549, width=0.0377684, height=0.016705, 
    viewOffsetX=0.000893104, viewOffsetY=-0.000439975)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#5bc ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#12080000 #844a0c0a #340602 ]', ), 
    )
p.seedEdgeByNumber(edges=pickedEdges, number=8, constraint=FIXED)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#400 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.460771, 
    farPlane=0.624858, width=0.0295281, height=0.0130603, 
    viewOffsetX=0.00186943, viewOffsetY=-0.000388609)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#80 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.459774, 
    farPlane=0.625855, width=0.0403115, height=0.0178298, 
    viewOffsetX=0.00150945, viewOffsetY=0.000145733)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#100 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.4432, 
    farPlane=0.642429, width=0.155349, height=0.0687112, 
    viewOffsetX=0.00808611, viewOffsetY=-0.00175868)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#2 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.452541, 
    farPlane=0.633088, width=0.0803108, height=0.0355215, 
    viewOffsetX=0.0051303, viewOffsetY=-0.0121259)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#4 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.455931, 
    farPlane=0.629699, width=0.0593819, height=0.0262647, 
    viewOffsetX=0.00357109, viewOffsetY=-0.0157957)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#8 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#10 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#20 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.461639, 
    farPlane=0.623991, width=0.0273408, height=0.0120929, 
    viewOffsetX=0.00528147, viewOffsetY=-0.00927606)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#120 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #60000000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00025, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#18 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #1100 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00025, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #60001100 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00022, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.463012, 
    farPlane=0.622618, width=0.0177827, height=0.00786529, 
    viewOffsetX=0.00400807, viewOffsetY=-0.00949727)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #a00000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00015, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.46069, 
    farPlane=0.62494, width=0.0339406, height=0.015012, viewOffsetX=0.00654456, 
    viewOffsetY=-0.00967063)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#120 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #60000000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00021, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#18 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #1100 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00021, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.4627, 
    farPlane=0.62293, width=0.0199469, height=0.00882255, 
    viewOffsetX=0.00448698, viewOffsetY=-0.0100733)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #1a150000 #2000008 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.0002, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.462522, 
    farPlane=0.623108, width=0.0187429, height=0.00829, viewOffsetX=0.00405829, 
    viewOffsetY=-0.0107786)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #a00000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00014, deviationFactor=0.1, 
    constraint=FIXED)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#20 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#fa0 ]', ), )
p.generateMesh(regions=pickedRegions, seedConstraintOverride=ON)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#10 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#fff ]', ), )
p.generateMesh(regions=pickedRegions, seedConstraintOverride=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.462428, 
    farPlane=0.623201, width=0.0233239, height=0.0103162, 
    viewOffsetX=0.00514135, viewOffsetY=-0.00945745)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #60001100 ]', ), )
p.setSeedConstraints(edges=pickedEdges, constraint=FIXED)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#20 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #a00000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00015, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#20 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#20 ]', ), )
p.generateMesh(regions=pickedRegions, seedConstraintOverride=ON)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#10 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#10 ]', ), )
p.generateMesh(regions=pickedRegions, seedConstraintOverride=ON)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#20 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#108 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.459414, 
    farPlane=0.626216, width=0.0428177, height=0.0189383, 
    viewOffsetX=0.00707629, viewOffsetY=-0.0102801)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#120 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #60000000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00022, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#18 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #1100 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00022, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#108 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.460756, 
    farPlane=0.624874, width=0.0296249, height=0.0131031, 
    viewOffsetX=0.00489617, viewOffsetY=-0.00928013)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #60001100 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00025, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.462022, 
    farPlane=0.623608, width=0.0218016, height=0.00964287, 
    viewOffsetX=0.00398832, viewOffsetY=-0.00848379)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #a00000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00018, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#20 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#10 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.458488, 
    farPlane=0.627141, width=0.0492107, height=0.021766, 
    viewOffsetX=0.00706071, viewOffsetY=-0.0135973)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #60001100 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.0003, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.460666, 
    farPlane=0.624964, width=0.0341102, height=0.015087, 
    viewOffsetX=0.00570282, viewOffsetY=-0.00944053)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #60001100 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00028, deviationFactor=0.1)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#138 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.462687, 
    farPlane=0.622943, width=0.0200471, height=0.00886687, 
    viewOffsetX=0.00387212, viewOffsetY=-0.00935038)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #1a150000 #2000008 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00018, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #1a150000 #2000008 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00017, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#30 ]', ), )
p.generateMesh(regions=pickedRegions)
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 NDBR15\NDBR15_geometry_coarse.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.398192, 
    farPlane=0.687438, width=0.465249, height=0.20578, viewOffsetX=0.125558, 
    viewOffsetY=-0.00703465)
elemType1 = mesh.ElemType(elemCode=C3D8T, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)
elemType2 = mesh.ElemType(elemCode=C3D6T, elemLibrary=STANDARD)
elemType3 = mesh.ElemType(elemCode=C3D4T, elemLibrary=STANDARD)
p = mdb.models['Model-Full-mesh-1-default'].parts['NDBR15-m']
c = p.cells
cells = c.getSequenceFromMask(mask=('[#fff ]', ), )
pickedRegions =(cells, )
p.setElementType(regions=pickedRegions, elemTypes=(elemType1, elemType2, 
    elemType3))
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 NDBR15\NDBR15_geometry_coarse.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.45679, 
    farPlane=0.62884, width=0.0540804, height=0.0239198, viewOffsetX=0.0120077, 
    viewOffsetY=-0.0102672)
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 NDBR15\NDBR15_geometry_coarse.cae".
