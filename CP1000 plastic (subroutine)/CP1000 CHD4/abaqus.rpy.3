# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2023.HF4 replay file
# Internal Version: 2023_07_21-20.45.57 RELr425 183702
# Run by nguyenb5 on Sun Jun 30 18:44:58 2024
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=119.81770324707, 
    height=121.741897583008)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
openMdb('CHD4_geometry_42039_nodes.cae')
#: The model database "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 CHD4\CHD4_geometry_42039_nodes.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-Full'].parts['CHD4-m']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.458588, 
    farPlane=0.627041, width=0.043142, height=0.0190135, 
    viewOffsetX=-0.000586408, viewOffsetY=-0.0081706)
session.viewports['Viewport: 1'].partDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
#: The contents of viewport "Viewport: 1" have been copied to the clipboard.
mdb.Model(name='Model-Full-mesh-1-default', 
    objectToCopy=mdb.models['Model-Full'])
#: The model "Model-Full-mesh-1-default" has been created.
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON, mesh=OFF)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=OFF)
del mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].depvar
del mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].userMaterial
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].density.setValues(
    table=((7890.0, ), ))
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].Elastic(table=((
    210000000000.0, 0.3), ))
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].Plastic(
    scaleStress=None, table=((839646000.0, 0.0), (880025000.0, 0.0003), (
    906975000.0, 0.0005), (926275000.0, 0.001), (926275000.0, 0.002), (
    939393000.0, 0.003), (949756000.0, 0.004), (958495000.0, 0.005), (
    966134000.0, 0.006), (972960000.0, 0.007), (979150000.0, 0.008), (
    984823000.0, 0.009), (990061000.0, 0.01), (1027470000.0, 0.02), (
    1049750000.0, 0.03), (1064310000.0, 0.04), (1074410000.0, 0.05), (
    1081810000.0, 0.06), (1087490000.0, 0.07), (1092060000.0, 0.08), (
    1095870000.0, 0.09), (1099140000.0, 0.1), (1111180000.0, 0.15), (
    1119630000.0, 0.2), (1126250000.0, 0.25), (1131720000.0, 0.3), (
    1136380000.0, 0.35), (1140440000.0, 0.4), (1144050000.0, 0.45), (
    1147300000.0, 0.5), (1150250000.0, 0.55), (1152960000.0, 0.6), (
    1155460000.0, 0.65), (1157790000.0, 0.7), (1159960000.0, 0.75), (
    1162000000.0, 0.8), (1163920000.0, 0.85), (1165740000.0, 0.9), (
    1167460000.0, 0.95), (1169110000.0, 1.0), (1170670000.0, 1.05), (
    1172160000.0, 1.1), (1173600000.0, 1.15), (1174970000.0, 1.2), (
    1176290000.0, 1.25), (1177560000.0, 1.3), (1178790000.0, 1.35), (
    1179970000.0, 1.4), (1181120000.0, 1.45), (1182220000.0, 1.5), (
    1183300000.0, 1.55), (1184340000.0, 1.6), (1185350000.0, 1.65), (
    1186330000.0, 1.7), (1187280000.0, 1.75), (1188210000.0, 1.8), (
    1189120000.0, 1.85), (1190000000.0, 1.9), (1190860000.0, 1.95), (
    1191700000.0, 2.0), (1192520000.0, 2.05), (1193320000.0, 2.1), (
    1194100000.0, 2.15), (1194870000.0, 2.2), (1195620000.0, 2.25), (
    1196350000.0, 2.3), (1197070000.0, 2.35), (1197770000.0, 2.4), (
    1198470000.0, 2.45), (1199140000.0, 2.5), (1199810000.0, 2.55), (
    1200460000.0, 2.6), (1201100000.0, 2.65), (1201730000.0, 2.7), (
    1202350000.0, 2.75), (1202960000.0, 2.8), (1203550000.0, 2.85), (
    1204140000.0, 2.9), (1204720000.0, 2.95), (1205290000.0, 3.0)))
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 CHD4\CHD4_geometry_42039_nodes.cae".
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF, mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.4607, 
    farPlane=0.62493, width=0.0299668, height=0.0132543, 
    viewOffsetX=0.00399125, viewOffsetY=-0.0103183)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#ffc ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=(
    '[#12080000 #20014011 #8202a000 #1 ]', ), )
p.seedEdgeByNumber(edges=pickedEdges, number=8, constraint=FIXED)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#400 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#800 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#8 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#4 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#80 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.462198, 
    farPlane=0.623432, width=0.0207404, height=0.00917349, 
    viewOffsetX=0.00255464, viewOffsetY=-0.0103685)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#4 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #40401800 #1400 ]', ), )
p.seedEdgeByNumber(edges=pickedEdges, number=8, constraint=FIXED)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#4 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#80 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#20 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#10 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#40 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#200 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#100 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.463017, 
    farPlane=0.622613, width=0.0156905, height=0.00693993, 
    viewOffsetX=0.00133859, viewOffsetY=-0.0102454)
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 CHD4\CHD4_geometry_42039_nodes.cae".
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#80000000 #2 #4400000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00012, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#800 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#4 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#80 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#100 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#80000000 #2 #4400000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00014, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#800 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#100 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#80 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#4 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#80000000 #2 #4400000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00013, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#80000000 #2 #4400000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.000135, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#80000000 #2 #4400000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00013, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.generateMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#80000000 #2 #4400000 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00014, deviationFactor=0.1, 
    constraint=FINER)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.462822, 
    farPlane=0.622807, width=0.0168906, height=0.00747074, 
    viewOffsetX=0.00321184, viewOffsetY=-0.0126509)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#80 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.462041, 
    farPlane=0.623589, width=0.0245424, height=0.0108551, 
    viewOffsetX=0.00568082, viewOffsetY=-0.0111919)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#180 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #68 #1250001 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00011, deviationFactor=0.1, 
    constraint=FIXED)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#180 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.461821, 
    farPlane=0.623809, width=0.0230589, height=0.010199, 
    viewOffsetX=0.00220451, viewOffsetY=-0.00967484)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#880 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#0 #68 #68000001 #400 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00012, deviationFactor=0.1, 
    constraint=FIXED)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#880 ]', ), )
p.generateMesh(regions=pickedRegions)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.461806, 
    farPlane=0.623824, width=0.0231525, height=0.0102404, 
    viewOffsetX=0.00164956, viewOffsetY=-0.00891845)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=(
    '[#68000000 #200068 #69250001 #400 ]', ), )
p.seedEdgeBySize(edges=pickedEdges, size=0.00012, deviationFactor=0.1, 
    constraint=FIXED)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
pickedRegions = c.getSequenceFromMask(mask=('[#984 ]', ), )
p.generateMesh(regions=pickedRegions)
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 CHD4\CHD4_geometry_42039_nodes.cae".
a = mdb.models['Model-Full-mesh-1-default'].rootAssembly
a.regenerate()
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    optimizationTasks=OFF, geometricRestrictions=OFF, stopConditions=OFF)
mdb.Job(name='mesh_1_default', model='Model-Full-mesh-1-default', 
    description='', type=ANALYSIS, atTime=None, waitMinutes=0, waitHours=0, 
    queue=None, memory=90, memoryUnits=PERCENTAGE, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, numThreadsPerMpiProcess=1, 
    multiprocessingMode=DEFAULT, numCpus=8, numDomains=8, numGPUs=0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.451157, 
    farPlane=0.634472, width=0.0891806, height=0.0393036, 
    viewOffsetX=0.000966306, viewOffsetY=-0.00722691)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.462405, 
    farPlane=0.623225, width=0.0194608, height=0.00860756, 
    viewOffsetX=0.000691085, viewOffsetY=-0.0104971)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
mdb.jobs['mesh_1_default'].submit(consistencyChecking=OFF)
#: The job input file "mesh_1_default.inp" has been submitted for analysis.
#: Error in job mesh_1_default: SPECIFIC HEAT MUST BE DEFINED IN A TRANSIENT COUPLED TEMPERATURE-DISPLACEMENT ANALYSIS
#: Error in job mesh_1_default: DEGREE OF FREEDOM 11 AND AT LEAST ONE OF DEGREES OF FREEDOM 1 THRU 6 MUST BE ACTIVE IN THE MODEL FOR *COUPLED TEMP-DISP. CHECK THE PROCEDURE AND ELEMENT TYPES USED IN THIS MODEL.
#: Job mesh_1_default: Analysis Input File Processor aborted due to errors.
#: Error in job mesh_1_default: Analysis Input File Processor exited with an error - Please see the  mesh_1_default.dat file for possible error messages if the file exists.
#: Job mesh_1_default aborted due to errors.
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-1')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON, mesh=OFF)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=OFF)
p1 = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].Conductivity(
    table=((1.0, ), ))
mdb.models['Model-Full-mesh-1-default'].materials['CP1000-m'].SpecificHeat(
    table=((1.0, ), ))
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 CHD4\CHD4_geometry_42039_nodes.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.455813, 
    farPlane=0.629816, width=0.0679194, height=0.0299333, 
    viewOffsetX=0.00979567, viewOffsetY=-0.00735742)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF, mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.461379, 
    farPlane=0.624251, width=0.0257547, height=0.0113913, 
    viewOffsetX=0.00480759, viewOffsetY=-0.0103067)
a = mdb.models['Model-Full-mesh-1-default'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['mesh_1_default'].submit(consistencyChecking=OFF)
#: The job input file "mesh_1_default.inp" has been submitted for analysis.
#: Error in job mesh_1_default: DEGREE OF FREEDOM 11 AND AT LEAST ONE OF DEGREES OF FREEDOM 1 THRU 6 MUST BE ACTIVE IN THE MODEL FOR *COUPLED TEMP-DISP. CHECK THE PROCEDURE AND ELEMENT TYPES USED IN THIS MODEL.
#: Job mesh_1_default: Analysis Input File Processor aborted due to errors.
#: Error in job mesh_1_default: Analysis Input File Processor exited with an error - Please see the  mesh_1_default.dat file for possible error messages if the file exists.
#: Job mesh_1_default aborted due to errors.
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.461989, 
    farPlane=0.623641, width=0.0249034, height=0.0110148, 
    viewOffsetX=0.00267061, viewOffsetY=-0.0108054)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.392041, 
    farPlane=0.693589, width=0.5073, height=0.224379, viewOffsetX=0.0897231, 
    viewOffsetY=-0.00797537)
elemType1 = mesh.ElemType(elemCode=C3D8T, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)
elemType2 = mesh.ElemType(elemCode=C3D6T, elemLibrary=STANDARD)
elemType3 = mesh.ElemType(elemCode=C3D4T, elemLibrary=STANDARD)
p = mdb.models['Model-Full-mesh-1-default'].parts['CHD4-m']
c = p.cells
cells = c.getSequenceFromMask(mask=('[#3fff ]', ), )
pickedRegions =(cells, )
p.setElementType(regions=pickedRegions, elemTypes=(elemType1, elemType2, 
    elemType3))
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 CHD4\CHD4_geometry_42039_nodes.cae".
a = mdb.models['Model-Full-mesh-1-default'].rootAssembly
a.regenerate()
a = mdb.models['Model-Full-mesh-1-default'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
a = mdb.models['Model-Full-mesh-1-default'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
mdb.jobs['mesh_1_default'].submit(consistencyChecking=OFF)
#: The job input file "mesh_1_default.inp" has been submitted for analysis.
#: Job mesh_1_default: Analysis Input File Processor completed successfully.
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.450819, 
    farPlane=0.634811, width=0.0912782, height=0.040228, 
    viewOffsetX=0.00633142, viewOffsetY=-0.00862754)
session.viewports['Viewport: 1'].setValues(displayedObject=None)
o1 = session.openOdb(
    name='C:/LocalUserData/User-data/nguyenb5/CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)/CP1000 CHD4/mesh_1_default.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o1)
#: Model: C:/LocalUserData/User-data/nguyenb5/CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)/CP1000 CHD4/mesh_1_default.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       13
#: Number of Node Sets:          15
#: Number of Steps:              1
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.396161, 
    farPlane=0.689183, width=0.415013, height=0.182904, viewOffsetX=0.00190253, 
    viewOffsetY=-0.00469093)
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='U', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'), )
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='U', outputPosition=NODAL, refinement=(COMPONENT, 'U2'), )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=18 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=18 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=18 )
#: Job mesh_1_default: Abaqus/Standard completed successfully.
#: Job mesh_1_default completed successfully. 
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.46301, 
    farPlane=0.622334, width=0.0195075, height=0.00859733, 
    viewOffsetX=-0.00169097, viewOffsetY=-0.0111972)
o1 = session.openOdb(
    name='C:/LocalUserData/User-data/nguyenb5/CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)/CP1000 CHD4/mesh_1_default.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o1)
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=100 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=100 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=100 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=100 )
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.451142, 
    farPlane=0.633442, width=0.0969262, height=0.0427172, 
    viewOffsetX=-0.0095699, viewOffsetY=-0.00796991)
mdb.save()
#: The model database has been saved to "C:\LocalUserData\User-data\nguyenb5\CP1000 plastic (UMAT UMATHT UHARD coupled temp-disp)\CP1000 CHD4\CHD4_geometry_42039_nodes.cae".
